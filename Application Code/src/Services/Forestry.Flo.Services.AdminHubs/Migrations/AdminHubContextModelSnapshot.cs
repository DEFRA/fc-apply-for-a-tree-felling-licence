// <auto-generated />
using System;
using Forestry.Flo.Services.AdminHubs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Forestry.Flo.Services.AdminHubs.Migrations
{
    [DbContext(typeof(AdminHubContext))]
    partial class AdminHubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AdminHubs")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.AdminHub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AdminManagerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AdminHub", "AdminHubs");
                });

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.AdminHubOfficer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("AdminHubId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdminHubId", "UserAccountId")
                        .IsUnique();

                    b.ToTable("AdminHubOfficer", "AdminHubs");
                });

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("AdminHubId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdminHubId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Area", "AdminHubs");
                });

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.AdminHubOfficer", b =>
                {
                    b.HasOne("Forestry.Flo.Services.AdminHubs.Entities.AdminHub", "AdminHub")
                        .WithMany("AdminOfficers")
                        .HasForeignKey("AdminHubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminHub");
                });

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.Area", b =>
                {
                    b.HasOne("Forestry.Flo.Services.AdminHubs.Entities.AdminHub", "AdminHub")
                        .WithMany("Areas")
                        .HasForeignKey("AdminHubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdminHub");
                });

            modelBuilder.Entity("Forestry.Flo.Services.AdminHubs.Entities.AdminHub", b =>
                {
                    b.Navigation("AdminOfficers");

                    b.Navigation("Areas");
                });
#pragma warning restore 612, 618
        }
    }
}

@using Forestry.Flo.External.Web.Infrastructure
@using Forestry.Flo.Services.FileStorage.Configuration
@using Microsoft.Extensions.Options
@inject IOptions<UserFileUploadOptions> Settings
@model Forestry.Flo.External.Web.Models.AgentAuthorityForm.AddAgentAuthorityDocumentFilesModel

@{
    ViewData["Title"] = "Add Agent Authority Form Files";
    var maxFileSize = (Settings?.Value ?? new UserFileUploadOptions()).MaxFileSizeBytes;
    var maxNumberDocs = (Settings?.Value ?? new UserFileUploadOptions()).MaxNumberDocuments;
    ViewData.ShowBackLink();
}

<div class="govuk-grid-column-full">

    <partial name="Partials/_PageErrors" />
    <partial name="Partials/_ConfirmationMessageDisplay" />
    <partial name="Partials/_UserGuideDisplay" />
    
    <h1 class="govuk-heading-xl">Add agent authority form files </h1>
    <p class="govuk-body">Upload the files which represent the authority given to you by the Woodland owner. This may be a single document or multiple.</p>
    
    <partial name="_AddAgentAuthorityFormFile" model="Model"/>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            var selectedFiles = [],
                maxSizeDescription = $('#allowed-max-size-description').val(),
                fileExtensions = $('#allowed-extensions').val(),
                fileExtensionsArray = fileExtensions.split(', ');

            fileExtensionsArray[fileExtensionsArray.length - 1] = 'or ' + fileExtensionsArray[fileExtensionsArray.length - 1];
            fileExtensionsDescription = fileExtensionsArray.join(', ');

            var clearErrors = function () {
                $('#agent-authority-document-files-error').addClass('govuk-visually-hidden');
                $('#agent-authority-document-files-error').attr('aria-hidden', 'true');
                $('#agent-authority-document-files').removeClass('govuk-file-upload--error');
                $('#file-upload-error-text').html('');
                $('#file-select-group').removeClass('govuk-form-group--error');
            };

            var updateListVisibility = function () {
                if (selectedFiles.length === 0) {
                    $('#aaf-selected-files-list').addClass('govuk-visually-hidden');
                    $('#aaf-selected-files-list').attr('aria-hidden', 'true');
                    $('#submit-agent-authority-document-forms-files-button').attr('disabled', 'disabled');
                }
                else {
                    $('#aaf-selected-files-list').removeClass('govuk-visually-hidden');
                    $('#aaf-selected-files-list').attr('aria-hidden', 'false');
                    $('#submit-agent-authority-document-forms-files-button').removeAttr('disabled');
                }
            };

            var addError = function (errorMessage) {
                $('#agent-authority-document-files-error').removeClass('govuk-visually-hidden');
                $('#agent-authority-document-files-error').attr('aria-hidden', 'false');
                $('#file-upload-error-text').append(errorMessage + "<br/>");
                $('#agent-authority-document-files').addClass('govuk-file-upload--error');
                $('#file-select-group').addClass('govuk-form-group--error');
            };

            var getIdForFile = function (file) {
                return file.lastModified + "" + file.size;
            };

            var removeFile = function (e) {
                e.preventDefault();
                clearErrors();

                var idToRemove = e.data.id,
                selector = ".govuk-summary-list__row#" + idToRemove,
                rowToRemove = $(selector);
                
                if (rowToRemove !== null && rowToRemove.length > 0) {
                   
                    rowToRemove.remove();   
                   
                    $('.govuk-summary-list__key').each(function (i) {
                        i++;
                        $(this).text('File '+i);
                    });

                    selectedFiles = $.grep(selectedFiles, function (file) {
                        return idToRemove !== getIdForFile(file);
                    });

                    updateListVisibility();
                }
            };

            var formatBytes = function (bytes, decimals) {
                if (bytes == 0) return '0 Bytes';
                var k = 1024,
                    dm = decimals || 2,
                    sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
                    i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
            };

            var createTemplate = function (file, counter) {
                var $template = $('<div class="govuk-summary-list__row"><dt class="govuk-summary-list__key"></dt><dd class="govuk-summary-list__value"></dd><dd class="govuk-summary-list__actions"><a class="govuk-link" href="#">Remove<span class="govuk-visually-hidden">File 1</span></a></dd></div>'),
                    id = getIdForFile(file);
                
                $template.attr('id', id);
                $template.find('.govuk-summary-list__key').text('File ' + counter);
                $template.find('.govuk-summary-list__value').text(file.name + ", " + formatBytes(file.size));
                $template.find('.govuk-visually-hidden').text(file.name);

                $template.find('.govuk-link').click({ id: id }, removeFile);

                return $template;
            };

            var addFile = function (file) {
                selectedFiles.push(file);

                var $newTemplate = createTemplate(file, selectedFiles.length);
                $('#aaf-selected-files').append($newTemplate);
                updateListVisibility();
            };

            $('#agent-authority-document-files').on('change', function (e, data) {
                clearErrors();
                if (selectedFiles.length + this.files.length <= @maxNumberDocs) {
                    $.each(this.files, function (index, file) {
                        var fileName = file.name,
                        fileExists = false;

                        if (file.size > @maxFileSize) {
                            addError(file.name + ' - files must be smaller than ' + maxSizeDescription);
                        }
                        else{
                            var fileNameParts = file.name.split('.');
                            var extension = fileNameParts[fileNameParts.length - 1].toLowerCase();
                            if (fileExtensions.toLowerCase().includes(extension) === false) {
                                addError(file.name + ' - selected files must be a ' + fileExtensionsDescription);
                            }
                            else
                            {
                                if (selectedFiles.length === 0) {
                                    addFile(file);
                                }
                                else {
                                    $.each(selectedFiles, function (index, existingFile) {
                                        if (existingFile.name === fileName) {
                                            fileExists = true;
                                            return false;
                                        }
                                    });
                                    if (!fileExists && selectedFiles.length < @maxNumberDocs) {
                                        addFile(file);
                                    }
                                }
                            }
                        }
                    });
                    this.value = '';
                }
                else{
                    addError('You can only upload a maximum of ' + @maxNumberDocs + ' files.');
                };
            });

            $('form').submit(function (e) {
                
                e.preventDefault();
                clearErrors();
                
                if (selectedFiles.length > 0) {
                    var formData = new FormData();
                    for (var i = 0; i < selectedFiles.length; i++) {
                        formData.append('agentAuthorityDocumentFiles', selectedFiles[i]);
                    }
                    $.ajax({
                        url: '@Url.Action("AttachAgentAuthorityFiles", "AgentAuthorityFormDocuments", new {agentAuthorityId=Model.AgentAuthorityId})',
                        type: 'POST',
                        xhrFields: {
                            withCredentials: true
                        },
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (data, textStatus, xhr) {
                            if (xhr.status === 201) {
                                var resourceUrl = xhr.getResponseHeader('Location');
                                if (resourceUrl) {
                                    window.location.href = resourceUrl;
                                } else {
                                    addError("Something went wrong uploading the authority form files, please try again.")
                                }
                            } else {
                                addError("Something went wrong uploading the authority form files - please try again.")
                            }
                        },
                        error: function (xhr, status, error) {
                            addError("Something went wrong while uploading the authority form files, please try again.")
                        }
                    });
                }
            });
        });
    </script>
}
@model Forestry.Flo.External.Web.Models.FellingLicenceApplication.ConstraintCheckModel
@inject FileTypesProvider FileTypesProvider

@using Forestry.Flo.Services.FileStorage.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Forestry.Flo.Services.Common

@if (Model.MostRecentExternalLisReport.HasValue)
{
    var lisDocument = Model.MostRecentExternalLisReport.Value;
    var fileType = FileTypesProvider.FindFileTypeByMimeTypeWithFallback(lisDocument.MimeType).KindOfDocument;
    var fileSize = FileSizeToStringConverter.SizeSuffix(lisDocument.FileSize);
    var createdDateTime = DateTimeDisplay.GetDateTimeDisplayString(lisDocument.CreatedTimestamp);
    <div>
        <p class="govuk-body-s">
            <a class="govuk-link govuk-link--no-visited-state" 
               asp-controller="FellingLicenceApplication" 
               asp-action="DownloadSupportingDocument"
               asp-route-applicationId="@Model.ApplicationId"
               asp-route-documentIdentifier="@lisDocument.Id" download>Download latest report</a>
            (@fileSize - @fileType - generated at @createdDateTime)
        </p>
    </div>
}
else if (Model.ExternalLisAccessedTimestamp.HasValue)
{
    <div>
        <p class="govuk-body-s">
            Constraint Report request was generated on @DateTimeDisplay.GetDateDisplayString(Model.ExternalLisAccessedTimestamp.Value) at @DateTimeDisplay.GetTimeDisplayString(Model.ExternalLisAccessedTimestamp.Value)
        </p>
    </div>
}
else
{
    <div>
        <p class="govuk-body-s">
            (No report has been generated yet)
        </p>
    </div>
}

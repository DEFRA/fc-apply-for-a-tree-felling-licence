@model Forestry.Flo.External.Web.Models.FellingLicenceApplication.ReviewFellingAndRestockingAmendments.FellingDetailViewModel
@using Forestry.Flo.Services.FellingLicenceApplications.Entities
@using Forestry.Flo.Services.FellingLicenceApplications.Extensions

@functions {
    public void RenderSummaryRow(string key, string? measure, object? value, object? oldValue = null)
    {
        var hasValue = value != null && !string.IsNullOrWhiteSpace(value.ToString());
        var hasOldValue = oldValue != null && !string.IsNullOrWhiteSpace(oldValue.ToString());
        var hasMeasure = !string.IsNullOrEmpty(measure);

        if (!hasOldValue)
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">@key</dt>
                <dd class="govuk-summary-list__value">
                    @if (hasValue)
                    {
                        @value
                        @if (hasMeasure)
                        {
                            @(" " + measure)
                        }
                    }
                </dd>
            </div>
        }
        else
        {
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">@key</dt>
                <dd class="govuk-summary-list__value">
                    @oldValue
                    @if (hasMeasure)
                    {
                        @(" " + measure)
                    }
                </dd>
            </div>
            <div class="govuk-summary-list__row" style="background:#fff3bf;">
                <dt class="govuk-summary-list__key">
                    <span aria-hidden="true" style="margin-right: 4px;">↳</span>
                    @key (amended)
                </dt>
                <dd class="govuk-summary-list__value">
                    @value
                    @if (hasMeasure)
                    {
                        @(" " + measure)
                    }
                </dd>
            </div>
        }
    }

    public void RenderSummaryRow(
        string key,
        bool? value,
        string? oldValue)
    {
        RenderSummaryRow(
            key, 
            null, 
            value switch
            {
                null => "N/A",
                true => "Yes",
                _ => "No"
            }, 
           oldValue switch
           {
               null => null,
               "N/A" => "N/A",
               "True" => "Yes",
               _ => "No"
           });
    }

    public void RenderStringSummaryRow(
        string key,
        string? value,
        string? oldValue)
    {
        RenderSummaryRow(
            key, 
            null,
            string.IsNullOrEmpty(value) ? "N/A" : value, 
            string.IsNullOrEmpty(oldValue) ? null : oldValue);
    }
}
<div class="govuk-summary-card__content">
    <dl class="govuk-summary-list">
        @{
            RenderSummaryRow("Estimated area to be felled", "Ha", Model.AreaToBeFelled, Model.OldValue(nameof(Model.AreaToBeFelled)));
            RenderSummaryRow("Estimated number of trees to be felled", "Trees", Model.NumberOfTrees, Model.OldValue(nameof(Model.NumberOfTrees)));
            RenderSummaryRow("Will you use tree marking?", null,
                string.IsNullOrWhiteSpace(Model.TreeMarking)
                    ? "No"
                    : "Yes, " + Model.TreeMarking,
                string.IsNullOrWhiteSpace(Model.OldValue("TreeMarking")?.ToString())
                    ? null
                    : "Yes, " + Model.OldValue("TreeMarking"));
            RenderSummaryRow("Species", null, Model.FellingSpecies, Model.OldValue("FellingSpecies"));
            RenderSummaryRow("Estimated felling volume", "m³", Model.EstimatedTotalFellingVolume, Model.OldValue(nameof(Model.EstimatedTotalFellingVolume)));
            RenderSummaryRow(
                "TPO",
                Model.IsPartOfTreePreservationOrder,
                Model.OldValue("IsPartOfTreePreservationOrder")?.ToString());
            RenderStringSummaryRow(
                "TPO Reference",
                Model.TreePreservationOrderReference,
                Model.OldValue("TreePreservationOrderReference")?.ToString());

            RenderSummaryRow(
                "CA",
                Model.IsWithinConservationArea,
                Model.OldValue("IsWithinConservationArea")?.ToString());

            RenderStringSummaryRow(
                "CA Reference",
                Model.ConservationAreaReference,
                Model.OldValue("ConservationAreaReference")?.ToString());

            // Only show restocking fields if allowed
            var showRestocking = (Model.OperationType ?? FellingOperationType.None).AllowedRestockingForFellingType(false).Any(x => x != TypeOfProposal.DoNotIntendToRestock);
            if (showRestocking)
            {
                RenderSummaryRow(
                    "Do you want to restock",
                    Model.IsRestocking,
                    Model.OldValue("IsRestocking")?.ToString());

                RenderStringSummaryRow(
                    "No restocking reason",
                    Model.NoRestockingReason,
                    Model.OldValue("NoRestockingReason")?.ToString());

                @if (!string.IsNullOrEmpty(Model.RestockingCompartments))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Restocking compartments</dt>
                        <dd class="govuk-summary-list__value">
                            @Model.RestockingCompartments
                        </dd>
                    </div>
                }
                
                @if (!string.IsNullOrEmpty(Model.RestockingOperationsInCompartment))
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">@($"Restocking operations in {Model.CompartmentName}")</dt>
                        <dd class="govuk-summary-list__value">
                            @Model.RestockingOperationsInCompartment
                        </dd>
                    </div>
                }
            }
        }
    </dl>
</div>
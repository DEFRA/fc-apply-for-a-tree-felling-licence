@using Forestry.Flo.External.Web.Infrastructure
@using Forestry.Flo.External.Web.Models.FellingLicenceApplication
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Forestry.Flo.Services.FileStorage.Configuration
@using Forestry.Flo.Services.FileStorage.Services
@using Forestry.Flo.Services.Common
@using Forestry.Flo.Services.Common.Extensions
@using Forestry.Flo.Services.Common.User
@using Forestry.Flo.Services.FellingLicenceApplications.Entities
@model Forestry.Flo.External.Web.Models.FellingLicenceApplication.SupportingDocumentationModel
@inject IOptions<UserFileUploadOptions> Settings
@inject FileTypesProvider FileTypesProvider

@{
    ViewData["Title"] = "Add supporting documents";
    ViewData.ManuallySetBackLink(Url.Action(Model.ReturnToApplicationSummary ? "ApplicationSummary" : "ApplicationTaskList", "FellingLicenceApplication", new
    {
        applicationId = Model.ApplicationId
    }));
    ViewData.ShowBackLink();

    var allowedTypes = (Settings?.Value ?? new UserFileUploadOptions()).AllowedFileTypes
        .Where(x => x.FileUploadReasons.Contains(FileUploadReason.SupportingDocument));
    var maxFileSize = (Settings?.Value ?? new UserFileUploadOptions()).MaxFileSizeBytes;
    var maxNumberDocs = (Settings?.Value ?? new UserFileUploadOptions()).MaxNumberDocuments;

    var attachments = Model.Documents
        .Where(x => x.DocumentPurpose is DocumentPurpose.Attachment or DocumentPurpose.EiaAttachment)
        .OrderByDescending(x => x.CreatedTimestamp)
        .ToList();

    var sortedDocuments = Model.Documents.OrderByDescending(x => x.CreatedTimestamp).ToList();
}

<div class="govuk-grid-column-full">
    <partial name="Partials/_ConfirmationMessageDisplay"/>
    <partial name="Partials/_UserGuideDisplay"/>
    <partial name="_ApplicationSummaryNotes" model="@ViewBag.ApplicationSummary" />
    <partial name="Partials/_PageErrors"/>

    <h1 class="govuk-heading-xl">@ViewData["Title"]</h1>

    <partial name="_ApplicationEditWarning.cshtml" model="@Model"/>

    <p class="govuk-body">Upload documents to support your application, for example:</p>
    <ul class="govuk-list govuk-list--bullet">
        <li>a <a class="govuk-link govuk-link--no-visited-state" rel="noreferrer noopener" target="_blank" href="https://www.gov.uk/government/publications/supplementary-notice-of-operations-within-an-sssi">Supplementary Notice of Operation (SNO) (opens in new tab)</a></li>
        <li>an <a class="govuk-link govuk-link--no-visited-state" rel="noreferrer noopener" target="_blank" href="https://www.gov.uk/government/publications/eia-deforestation-application-form">EIA form (opens in new tab)</a> if deforestation or afforestation proposed</li>
        <li>additional documentation if your application does not comply with the <a class="govuk-link govuk-link--no-visited-state" rel="noreferrer noopener" target="_blank" href="https://www.gov.uk/government/publications/the-uk-forestry-standard">UK Forestry Standard (opens in new tab)</a></li>
    </ul>
    <p class="govuk-body">You can only upload documents in one of the following formats:</p>
    <ul class="govuk-list govuk-list--bullet">
        @foreach (var allowedType in allowedTypes)
        {
            <li>@allowedType.Description: @string.Join(", ", allowedType.Extensions.Select(x => $".{x.ToLower()}"))</li>
        }
    </ul>
    <p class="govuk-body">Each document must be less than @FileSizeToStringConverter.SizeSuffix(maxFileSize) in size and a maximum of @maxNumberDocs documents may be uploaded to support your application.</p>

    <form id="attachSupportingDocumentationForm" method="post" enctype="multipart/form-data" asp-action="AttachSupportingDocumentation">
        @if (attachments.Count < (Settings?.Value ?? new UserFileUploadOptions()).MaxNumberDocuments)
        {
            var addSupportingDocumentModel = new AddSupportingDocumentModel
            { 
                FellingLicenceApplicationId = Model.ApplicationId,
                DocumentCount = attachments.Count,
                ReturnToApplicationSummary = Model.ReturnToApplicationSummary
            };

            <partial name="_AddSupportingDocuments" model="@addSupportingDocumentModel"/>
        }
    </form>

    <div>
        <h2 class="govuk-heading-m">Attached documentation</h2>

        @if (!sortedDocuments.Any())
        {
            <p class="govuk-body">
                No supporting documents have been uploaded.
            </p>
        }
        else
        {
            <form method="post" asp-action="RemoveSupportingDocumentation" id="documentListForm">
                <input asp-for="@Model.ApplicationId">
                <input type="hidden" asp-for="@Model.ReturnToApplicationSummary">
                <input type="hidden" name="documentIdentifier"/>
                <table class="govuk-table" data-module="moj-sortable-table" id="documentation-list-table">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th scope="col" class="govuk-table__header" aria-sort="none">Name</th>
                            <th scope="col" class="govuk-table__header" aria-sort="none">Category</th>
                            <th scope="col" class="govuk-table__header" aria-sort="descending">Upload Date</th>
                            <th scope="col" class="govuk-table__header">Actions</th>
                        </tr>
                    </thead>
                    <tbody data-module="moj-sortable-table" class="govuk-table__body">
                        @foreach (var document in sortedDocuments)
                        {
                            var userCanDelete = document.AttachedByType is ActorType.ExternalApplicant && document.DocumentPurpose is DocumentPurpose.Attachment;

                            <tr class="govuk-table__row" data-id="@document.Id">
                                <td class="govuk-table__cell wrapped-text">
                                    <a
                                        class="hidden-download-supporting-document"
                                        asp-controller="FellingLicenceApplication"
                                        asp-action="DownloadSupportingDocument"
                                        asp-route-applicationId="@Model.ApplicationId"
                                        asp-route-documentIdentifier="@document.Id">
                                        @document.FileName
                                    </a>
                                </td>
                                
                                <td class="govuk-table__cell" data-sort-value="@document.DocumentPurpose.GetDisplayName()">@document.DocumentPurpose.GetDisplayName()</td>

                                <td class="govuk-table__cell" data-sort-value="@document.CreatedTimestamp.Ticks">@DateTimeDisplay.GetDateTimeDisplayString(document.CreatedTimestamp)</td>

                                <td class="govuk-table__cell">
                                    <input condition="@userCanDelete" type="submit" class="govuk-button govuk-button--warning" data-id="@document.Id" data-module="govuk-button" name="delete-supporting-document" value="Remove" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>
        }
    </div>
    <div>
        <form id="supportingDocumentationForm" method="post" asp-action="SupportingDocumentation" asp-controller="FellingLicenceApplication" asp-route-id="@Model.ApplicationId">
            <input type="hidden" asp-for="ReturnToApplicationSummary" />
            @Html.HiddenFor(x => x.ApplicationId)

            <fieldset class="govuk-fieldset govuk-!-margin-top-4 govuk-!-margin-bottom-4">
                <div class="govuk-form-group">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Have you uploaded all the supporting documents associated with this application?
                    </legend>
                    <validation asp-for="StepComplete"></validation>
                    <div class="govuk-radios govuk-!-margin-top-2" data-module="govuk-radios">
                        <div class="govuk-radios__item">
                            @Html.RadioButtonFor(x => x.StepComplete,true,new { @class = "govuk-radios__input",  @id="radio-complete-yes"  })
                            <label class="govuk-label govuk-radios__label" for="radio-complete-yes">
                                Yes, I have uploaded everything I need to submit this application
                            </label>
                        </div>
                    </div>
                    <div class="govuk-radios govuk-!-margin-top-2" data-module="govuk-radios">
                        <div class="govuk-radios__item ">
                            @Html.RadioButtonFor(x => x.StepComplete,false,new { @class = "govuk-radios__input",  @id="radio-complete-no" })
                            <label class="govuk-label govuk-radios__label" for="radio-complete-no">
                                No, I still need to upload some documents
                            </label>
                        </div>
                    </div>
                </div>
            </fieldset>

            <div class="govuk-form-group">
                <div class="govuk-button-group">
                    <button class="govuk-button" type="submit" data-module="govuk-button">
                        Continue
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script src="~/js/supporting-documentation.js" asp-append-version="true"></script>

    @if (!Model.AllowEditing)
    {
        <script src="/js/disable-form-elements.js"></script>

        <script>
            $(function() {
                disableFormElements('#documentListForm');
                disableFormElements('#attachSupportingDocumentationForm');
                disableFormElements('#supportingDocumentationForm');

                document.getElementsByName("visible-download-supporting-document").forEach((e, i) => e.disabled = false);
            });
        </script>
    }
}
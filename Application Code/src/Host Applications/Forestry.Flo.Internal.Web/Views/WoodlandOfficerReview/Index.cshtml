@{
    ViewData["Title"] = "Woodland officer review";
}
@using Forestry.Flo.Internal.Web.Controllers.FellingLicenceApplication
@using Forestry.Flo.Services.FellingLicenceApplications.Models
@using Forestry.Flo.Services.Common.Extensions
@using Forestry.Flo.Services.FellingLicenceApplications.Entities
@using Forestry.Flo.Services.FellingLicenceApplications.Extensions
@model Forestry.Flo.Internal.Web.Models.WoodlandOfficerReview.WoodlandOfficerReviewModel

@{
    var user = new InternalUser(User);
}

<partial name="Partials/_ConfirmationMessageDisplay"/>
<partial name="Partials/_UserGuideDisplay"/>
<partial name="Partials/_FellingLicenceApplicationSummary" model="@Model.FellingLicenceApplicationSummary"/>

<div class="govuk-grid-column-two-thirds">
    
    <h1 class="govuk-heading-l">@ViewData["Title"]</h1>
    
    <partial name="Partials/_PageErrors"/>
    
    <input id="steps-complete" type="hidden" value="@Model.WoodlandOfficerReviewTaskListStates.IsCompletable().ToString()" />
    
    <div>
        <ul class="govuk-task-list">
            <li class="govuk-task-list__item govuk-task-list__item--with-link">
                <div class="govuk-task-list__name-and-hint">
                    <a class="govuk-link govuk-task-list__link" href="@Url.Action("SiteVisit", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="site-visit">
                        Site comments
                    </a>
                </div>
                <div class="govuk-task-list__status" id="site-visit">
                    @if (Model.WoodlandOfficerReviewTaskListStates.SiteVisitStepStatus == InternalReviewStepStatus.Completed)
                    {
                        @Model.WoodlandOfficerReviewTaskListStates.SiteVisitStepStatus.GetDisplayName()
                    }
                    else
                    {
                        <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.SiteVisitStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.SiteVisitStepStatus.GetDisplayName()</strong>
                    }
                </div>
            </li>
            @if (Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus is InternalReviewStepStatus.NotRequired)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        EIA check
                        <div class="govuk-task-list__hint">
                            (Deforestation or afforestation not detected for this application)
                        </div>
                    </div>
                    <div class="govuk-task-list__status" id="constraints-check">
                        <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus.GetDisplayName()</strong>
                    </div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action(nameof(WoodlandOfficerReviewController.EiaScreening), new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="eia-check">
                            EIA check
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="eia-check">
                        @if (Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.EiaScreeningStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }

            <li class="govuk-task-list__item govuk-task-list__item--with-link">
                <div class="govuk-task-list__name-and-hint">
                    <a class="govuk-link govuk-task-list__link" href="@Url.Action("Pw14Checks", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="pw14-checks">
                        Woodland officer checks
                    </a>
                </div>
                <div class="govuk-task-list__status" id="pw14-checks">
                    @if (Model.WoodlandOfficerReviewTaskListStates.Pw14ChecksStepStatus == InternalReviewStepStatus.Completed)
                    {
                        @Model.WoodlandOfficerReviewTaskListStates.Pw14ChecksStepStatus.GetDisplayName()
                    }
                    else
                    {
                        <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.Pw14ChecksStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.Pw14ChecksStepStatus.GetDisplayName()</strong>
                    }
                </div>
            </li>

            <li class="govuk-task-list__item govuk-task-list__item--with-link">
                <div class="govuk-task-list__name-and-hint">
                    <a class="govuk-link govuk-task-list__link" href="@Url.Action("ConfirmedFellingAndRestocking", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="felling-and-restocking">
                        Confirm felling and restocking
                    </a>
                </div>
                <div class="govuk-task-list__status" id="felling-and-restocking">
                    @if (Model.WoodlandOfficerReviewTaskListStates.FellingAndRestockingStepStatus == InternalReviewStepStatus.Completed)
                    {
                        @Model.WoodlandOfficerReviewTaskListStates.FellingAndRestockingStepStatus.GetDisplayName()
                    }
                    else
                    {
                        <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.FellingAndRestockingStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.FellingAndRestockingStepStatus.GetDisplayName()</strong>
                    }
                </div>
            </li>
            
            @if (Model.WoodlandOfficerReviewTaskListStates.ConditionsStepStatus == InternalReviewStepStatus.CannotStartYet)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Conditions and remarks
                        <div class="govuk-task-list__hint">
                            (Confirmed felling and restocking must be completed)  @* TODO code to check for this in back-end *@
                        </div>
                    </div>
                    <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("Conditions", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="conditions">
                            Conditions and remarks
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="conditions">
                        @if (Model.WoodlandOfficerReviewTaskListStates.ConditionsStepStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.ConditionsStepStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.ConditionsStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.ConditionsStepStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.CompartmentDesignationsStepStatus == InternalReviewStepStatus.CannotStartYet)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Compartment designations
                        <div class="govuk-task-list__hint">
                            (Confirmed felling and restocking must be completed)  @* TODO code to check for this in back-end *@
                        </div>
                    </div>
                    <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("ViewDesignations", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="designations">
                            Compartment designations
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="designations">
                        @if (Model.WoodlandOfficerReviewTaskListStates.CompartmentDesignationsStepStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.CompartmentDesignationsStepStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.CompartmentDesignationsStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.CompartmentDesignationsStepStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.ConsultationStepStatus == InternalReviewStepStatus.CannotStartYet)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Consultation
                        <div class="govuk-task-list__hint">
                            (Confirmed felling and restocking must be completed)  @* TODO code to check for this in back-end *@
                        </div>
                    </div>
                    <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("Index", "ExternalConsulteeInvite", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="consultation">
                            Consultation
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="consultation">
                        @if (Model.WoodlandOfficerReviewTaskListStates.ConsultationStepStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.ConsultationStepStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.ConsultationStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.ConsultationStepStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.PublicRegisterStepStatus == InternalReviewStepStatus.CannotStartYet)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Consultation public register
                        <div class="govuk-task-list__hint">
                            (Confirmed felling and restocking must be completed)  @* TODO code to check for this in back-end *@
                        </div>
                    </div>
                    <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("PublicRegister", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="public-register">
                            Consultation public register
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="public-register">
                        @if (Model.WoodlandOfficerReviewTaskListStates.PublicRegisterStepStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.PublicRegisterStepStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.PublicRegisterStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.PublicRegisterStepStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus is InternalReviewStepStatus.CannotStartYet or InternalReviewStepStatus.NotRequired)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Larch check
                        @if (Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus == InternalReviewStepStatus.CannotStartYet)
                        {
                            <div class="govuk-task-list__hint">
                                (Confirmed felling and restocking must be completed)
                            </div>
                        }
                        else
                        {
                            <div class="govuk-task-list__hint">
                                (No larch species proposed in the application)
                            </div>
                        }
                    </div>
                    @if (Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus == InternalReviewStepStatus.CannotStartYet)
                    {
                        <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                    }
                    else
                    {
                        <div class="govuk-task-list__status">
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus.GetDisplayName()</strong>
                        </div>
                    }
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("LarchCheck", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="larch-check">
                            Larch check
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="larch-check">
                        @if (Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.LarchApplicationStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus is InternalReviewStepStatus.CannotStartYet or InternalReviewStepStatus.NotRequired)
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Larch flyover update
                        @if (Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus == InternalReviewStepStatus.CannotStartYet)
                        {
                            <div class="govuk-task-list__hint">
                                (Larch check must be completed)
                            </div>
                        }
                        else
                        {
                            <div class="govuk-task-list__hint">
                                (No larch species proposed in Zone 1)
                            </div>
                        }
                    </div>
                    @if (Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus == InternalReviewStepStatus.CannotStartYet)
                    {
                        <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                    }
                    else
                    {
                        <div class="govuk-task-list__status">
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus.GetDisplayName()</strong>
                        </div>
                    }
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        <a class="govuk-link govuk-task-list__link" href="@Url.Action("LarchFlyover", new { id = Model.FellingLicenceApplicationSummary.Id })" aria-describedby="larch-flyover-check">
                            Larch flyover update
                        </a>
                    </div>
                    <div class="govuk-task-list__status" id="larch-flyover-check">
                        @if (Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.LarchFlyoverStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
            
            @if (Model.WoodlandOfficerReviewTaskListStates.FinalChecksStepStatus == InternalReviewStepStatus.CannotStartYet) @* TODO code to check for this in back-end *@
            {
                <li class="govuk-task-list__item">
                    <div class="govuk-task-list__name-and-hint">
                        Final checks
                        <div class="govuk-task-list__hint">
                            (All preceding steps must be completed)
                        </div>
                    </div>
                    <div class="govuk-task-list__status govuk-task-list__status--cannot-start-yet">@(InternalReviewStepStatus.CannotStartYet.GetDisplayName())</div>
                </li>
            }
            else
            {
                <li class="govuk-task-list__item govuk-task-list__item--with-link">
                    <div class="govuk-task-list__name-and-hint">
                        @* <a class="govuk-link govuk-task-list__link" href="#" aria-describedby="final-checks">
                            Final checks
                        </a> *@
                        Final checks
                        <div class="govuk-task-list__hint">
                            (Not implemented yet)
                        </div>
                    </div>
                    <div class="govuk-task-list__status" id="final-checks">
                        @if (Model.WoodlandOfficerReviewTaskListStates.FinalChecksStepStatus == InternalReviewStepStatus.Completed)
                        {
                            @Model.WoodlandOfficerReviewTaskListStates.FinalChecksStepStatus.GetDisplayName()
                        }
                        else
                        {
                            <strong class="govuk-tag @Model.WoodlandOfficerReviewTaskListStates.FinalChecksStepStatus.GetStatusStyleName()">@Model.WoodlandOfficerReviewTaskListStates.FinalChecksStepStatus.GetDisplayName()</strong>
                        }
                    </div>
                </li>
            }
        </ul>
        
        <div class="govuk-form-group" condition="@(Model.FellingLicenceApplicationSummary.MostRecentFcLisReport.HasValue)">
            <partial name="Partials/_ConstraintReportDownloadLink" model="@Model.FellingLicenceApplicationSummary" />
        </div>

        <form method="post" asp-action="ConfirmWoodlandOfficerReview">
            <input asp-for="ApplicationId"/>
            <input type="hidden" asp-for="AssignedFieldManager"/>

            <div class="govuk-form-group">
                <h2 class="govuk-heading-m">Review actions</h2>

                <div class="govuk-form-group">
                    <label class="govuk-label" asp-for="RecommendedLicenceDuration">
                        <h3 class="govuk-heading-s">
                            Recommended licence duration
                        </h3>
                    </label>
                    <select condition-disabled="@(!Model.Editable(user))" class="govuk-select" asp-for="RecommendedLicenceDuration" asp-items="@Html.GetEnumSelectList<RecommendedLicenceDuration>()"></select>
                </div>
                
                
                <div class="govuk-form-group" condition="@Model.Editable(user)">
                    <button 
                        data-prevent-double-click="true" 
                        type="submit" 
                        asp-action="GenerateLicencePreview" 
                        asp-route-applicationId="@Model.FellingLicenceApplicationSummary.Id" 
                        class="govuk-button govuk-button--secondary" 
                        data-module="govuk-button">
                        Generate preview document
                    </button>

                    <partial name="Partials/_ApplicationDocumentDownloadLink" model="@Model.FellingLicenceApplicationSummary" />
                </div>

                
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                            <h3 class="govuk-fieldset__heading">
                                Publish on the decision public register?
                            </h3>
                        </legend>
                        
                        <div class="govuk-radios" data-module="govuk-radios">
                            <div class="govuk-radios__item">
                                <input condition-disabled="@(!Model.Editable(user))" class="govuk-radios__input" id="dpr-yes" asp-for="RecommendationForDecisionPublicRegister" type="radio" value="true"/>
                                <label class="govuk-label govuk-radios__label" for="dpr-yes">Yes, publish on the decision public register</label>
                            </div>
                            <div class="govuk-radios__item">
                                <input condition-disabled="@(!Model.Editable(user))" class="govuk-radios__input" id="dpr-no" asp-for="RecommendationForDecisionPublicRegister" type="radio" value="false"/>
                                <label class="govuk-label govuk-radios__label" for="dpr-no">No, do not publish on the decision public register</label>
                            </div>
                        </div>
                        
                        <br/>
                        
                        <h3 class="govuk-label-wrapper">
                            <label class="govuk-label govuk-label--s" asp-for="RecommendationForDecisionPublicRegisterReason">
                                Reason for decision
                            </label>
                        </h3>
                        <div id="dpr-recommendation-hint" class="govuk-hint">
                            Explain why you chose this option
                        </div>
                        <textarea class="govuk-textarea" condition-disabled="@(!Model.Editable(user))" rows="5" aria-describedby="dpr-recommendation-hint" asp-for="RecommendationForDecisionPublicRegisterReason"></textarea>
                    </fieldset>
                </div>

                <div class="govuk-form-group">
                    <div condition="@Model.Editable(user)" class="govuk-hint">
                        When you’ve completed all your checks,
                        submit your review to move the application to the next stage.
                    </div>
                    <div class="govuk-button-group">
                        <button condition="@Model.Editable(user)" id="submit-review-btn" class="govuk-button" data-module="govuk-button">Submit review</button>
                        <a class="govuk-link" asp-controller="FellingLicenceApplication" asp-action="ApplicationSummary" asp-route-id="@Model.FellingLicenceApplicationSummary.Id">Return to application summary</a>
                    </div>
                </div>
            </div>
        </form>
        
        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">

        <partial name="Partials/_ActivityFeed" model="@Model.WoodlandOfficerReviewCommentsFeed"/>

    </div>
</div>

@section Scripts
{
    <script src="~/js/add-case-note.js" asp-append-version="true"></script>
    <script src="~/js/display-user-icon.js" asp-append-version="true"></script>
    <script src="~/js/woodland-officer-review.js" asp-append-version="true"></script>
    <script src="~/js/filter-activity-feed.js" asp-append-version="true"></script>
}

@section breadcrumbs
{
    <partial name="Partials/_BreadcrumbsMenu" model="@Model.Breadcrumbs" />
}
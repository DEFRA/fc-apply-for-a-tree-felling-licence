@using Forestry.Flo.Services.Common.Extensions
@using NodaTime
@model Forestry.Flo.Internal.Web.Models.WoodlandOfficerReview.DesignationsViewModel


@{
    ViewData["Title"] = "Review designations for " + Model.FellingLicenceApplicationSummary?.PropertyName;
    var user = new InternalUser(User);

    var totalCompartmentsToReview = Model.CompartmentDesignations.CompartmentDesignations.Count();
    var numberCompartmentsReviewed = Model.CompartmentDesignations.CompartmentDesignations
        .Count(x => x.HasCompletedDesignations);

    var hasCompletedAllCompartments = totalCompartmentsToReview == numberCompartmentsReviewed;
}

<div class="govuk-grid-column-full">
    <partial name="Partials/_ConfirmationMessageDisplay" />
    <partial name="Partials/_UserGuideDisplay" />
    <partial name="Partials/_FellingLicenceApplicationSummary" model="@Model.FellingLicenceApplicationSummary" />
    <partial name="Partials/_PageErrors" />
</div>

<div class="govuk-grid-column-two-thirds">

    <h1 class="govuk-heading-l">@ViewData["Title"]</h1>
    
    <p class="govuk-body">
        Check the LIS report before reviewing each compartment. For each
        compartment, record whether it has designations or confirm that no 
        designations apply.
    </p>
    
    <partial name="Partials/_ConstraintReportDownloadLink" model="@Model.FellingLicenceApplicationSummary"/>
    
    <h2 class="govuk-heading-m">Compartment list</h2>
    
    <p condition="@Model.Editable(user)" class="govuk-body">
        Use the LIS report to check compartments. Select "Change" to add
        designations.
    </p>
    
    <div class="govuk-hint">@numberCompartmentsReviewed of @totalCompartmentsToReview compartments reviewed</div>
    
    @if (Model.CompartmentDesignations.CompartmentDesignations.NotAny())
    {
        <div class="govuk-body">No compartments found.</div>
    }
    else
    {
        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Compartment</th>
                    <th scope="col" class="govuk-table__header">Designations</th>
                    <th condition="@Model.Editable(user)" scope="col" class="govuk-table__header">Action</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
            @foreach (var compartment in Model.CompartmentDesignations.CompartmentDesignations)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell">@compartment.CompartmentName</td>
                    <td class="govuk-table__cell">@compartment.GetDesignationSummary()</td>
                    <td condition="@Model.Editable(user)" class="govuk-table__cell"><a class="govuk-link" asp-action="UpdateDesignations" asp-route-id="@Model.ApplicationId" asp-route-compartmentId="@compartment.SubmittedFlaCompartmentId">Change<span class="govuk-visually-hidden">&nbsp;designations for @compartment.CompartmentName</span></a></td>
                </tr>
            }
            </tbody>
        </table>
    }
    
    <form method="post">
        <input asp-for="ApplicationId"/>
        <div class="govuk-form-group">
            <div class="govuk-button-group">
                <button id="submit-button" condition="@(Model.Editable(user) && hasCompletedAllCompartments)" class="govuk-button" data-prevent-double-click="true" data-module="govuk-button" type="submit">Confirm and submit</button>
                <a asp-controller="WoodlandOfficerReview" asp-action="Index" asp-route-id="@Model.ApplicationId" class="govuk-link">Back to woodland officer review</a>
            </div>
        </div>
    </form>


</div>

@section Scripts
{
    <script src="~/js/site-visit.js" asp-append-version="true"></script>
    <script src="~/js/add-case-note.js" asp-append-version="true"></script>
    <script src="~/js/display-user-icon.js" asp-append-version="true"></script>
    <script src="~/js/filter-activity-feed.js" asp-append-version="true"></script>
}

@section breadcrumbs
{
    <partial name="Partials/_BreadcrumbsMenu" model="@Model.Breadcrumbs" />
}
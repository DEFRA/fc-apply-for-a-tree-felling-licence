@{
    ViewData["Title"] = "Process felling licence applications";
}

@using Forestry.Flo.Services.Common.Extensions
@using Forestry.Flo.Services.FellingLicenceApplications.Entities
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Forestry.Flo.Internal.Web.Services.FellingLicenceApplication
@using Forestry.Flo.Services.InternalUsers.Entities.UserAccount
@using Forestry.Flo.Internal.Web.Infrastructure
@using Forestry.Flo.Services.Common.User
@model Forestry.Flo.Internal.Web.Models.FellingLicenceApplication.HomePageModel 

@{
    var user = new InternalUser(User);
    var offset = user.AccountType is AccountTypeInternal.AccountAdministrator ? -1 : 0;
}

<not-logged-in>

    <div class="govuk-grid-column-full govuk-body">
        <h1 class="govuk-heading-l">@ViewData["Title"]</h1>
        
        <p class="govuk-body">Use this service to process applications for a tree felling licence.</p>

        <a asp-controller="Home" asp-action="SignIn" draggable="false" class="govuk-button govuk-button--start" data-module="govuk-button">

            Start now

            <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"/>
            </svg>

        </a>

    </div>

</not-logged-in>
<logged-in>
    <div class="govuk-grid-column-full govuk-body">

        <div class="govuk-grid-row">

            <div class="govuk-grid-column-full">
                <h1 class="govuk-heading-m">Process stage</h1>
            </div>

        </div>

        <div class="govuk-!-text-align-left govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="govuk-hint">
                    Filter applications by where they are in the process.
                </div>

                @foreach (var fellingLicenceStatus in FellingLicenceApplicationUseCase.PostSubmittedStatuses)
                {
                    <strong fla-status-filter="@fellingLicenceStatus" class="govuk-tag app-task-list__tag govuk-!-margin-right-2 @(fellingLicenceStatus.GetStatusStyleName())" id="company-information-status">
                        @fellingLicenceStatus.GetDisplayNameByActorType(ActorType.InternalUser)

                        (@(Model.FellingLicenceApplicationAssignmentListModel.FellingLicenceStatusCount.FirstOrDefault(x => x.FellingLicenceStatus == fellingLicenceStatus)?.Count ?? 0))
                    </strong>
                }
            </div>
        </div>

        <div class="govuk-!-text-align-left govuk-grid-row">
            <div class="govuk-grid-column-full" id="filter-section">
                <div>
                    <p>Filter by</p>
                    <strong id="fla-assigned-to-user-filter" class="govuk-tag app-task-list__tag govuk-!-margin-right-2 govuk-!-margin-bottom-2 govuk-tag--grey" id="company-information-status">
                        My cases (@Model.FellingLicenceApplicationAssignmentListModel.AssignedToUserCount)
                    </strong>
                </div>
            </div>
        </div>
        <div class="govuk-!-text-align-left govuk-grid-row govuk-!-margin-top-2">
            <div class="govuk-grid-column-full">
                <label class="govuk-label--s" for="search">Search for an application</label>
                <div class="govuk-hint">
                    Search by application reference number, property or user.
                </div>
                <div class="search-input-container">
                    <input class="govuk-input" id="search" name="search" type="text" title="Search terms" />
                    @{
                        var initialSearch = Context.Request.Query["search"].ToString();
                        var hasInitialSearch = !string.IsNullOrWhiteSpace(initialSearch);
                    }
                    <button type="button"
                            id="searchButton"
                            data-module="govuk-button"
							class="govuk-button save-button-padding govuk-button govuk-!-margin-bottom-0 @(hasInitialSearch ? "" : "govuk-button--disabled")"
                            @(hasInitialSearch ? "" : "disabled")>
                        Search
                    </button>
                </div>
            </div>
        </div>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <p>Showing @Model.FellingLicenceApplicationAssignmentListModel.TotalCount applications | <a class="govuk-link govuk-link--no-visited-state" id="clear-all-filters">Clear all filters and search terms</a></p>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                @* Add sorting support to table headers using column/dir and pagination using page *@
                @{
                    string currentSortColumn = Context.Request.Query["column"];
                    string currentSortDirection = Context.Request.Query["dir"];
                    if (string.IsNullOrWhiteSpace(currentSortColumn))
                    {
                        currentSortColumn = "FinalActionDate";
                    }
                    if (string.IsNullOrWhiteSpace(currentSortDirection))
                    {
                        currentSortDirection = "asc";
                    }
                    Func<string, string> getSortUrl = (column) => {
                        var direction = (currentSortColumn == column && currentSortDirection == "asc") ? "desc" : "asc";
                        var query = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
                        query["column"] = column;
                        query["dir"] = direction;
                        var queryString = string.Join("&", query.Select(x => $"{x.Key}={x.Value}"));
                        return $"?{queryString}";
                    };
                    Func<string, string> getSortArrow = (column) => {
                        if (currentSortColumn == column)
                            return currentSortDirection == "asc" ? "▲" : "▼";
                        return "⇵";
                    };
                    Func<int, string> getPageUrl = (page) => {
                        var query = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
                        query["page"] = page.ToString();
                        var queryString = string.Join("&", query.Select(x => $"{x.Key}={x.Value}"));
                        return $"?{queryString}";
                    };
                }

                @if (Model.FellingLicenceApplicationAssignmentListModel.TotalCount == 0)
                {
                    <p class="govuk-body">No applications found.</p>
                }
                else
                {
                <table class="govuk-table" id="application-list-table">

                    <thead class="govuk-table__head">

                    <tr class="govuk-table__row">

                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("Status")">Status @getSortArrow("Status")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            Sub-status
                        </th>
                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("Reference")">Reference @getSortArrow("Reference")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("Property")">Property @getSortArrow("Property")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("SubmittedDate")">Date submitted @getSortArrow("SubmittedDate")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("CitizensCharterDate")">Citizen charter date @getSortArrow("CitizensCharterDate")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            <a class="sort-header" href="@getSortUrl("FinalActionDate")">Final action date @getSortArrow("FinalActionDate")</a>
                        </th>
                        <th scope="col" class="govuk-table__header">
                            Assigned users
                        </th>

                        <require-user-account-type required-account-type="AccountAdministrator">
                            <th scope="col" class="govuk-table__header">
                                Options
                            </th>
                        </require-user-account-type>
                    </tr>

                    </thead>

                    <tbody class="govuk-table__body">

                    @{
                        foreach (var assignedFellingLicenceApplicationModel in Model.FellingLicenceApplicationAssignmentListModel.AssignedFellingLicenceApplicationModels)
                        {
                            <tr class="govuk-table__row data-row">

                                <td class="govuk-table__cell" style="width: @(12 + offset)%">
                                    <strong class="govuk-tag app-task-list__tag @(assignedFellingLicenceApplicationModel.FellingLicenceStatus.GetStatusStyleName())" id="company-information-status">@assignedFellingLicenceApplicationModel.FellingLicenceStatus.GetDisplayNameByActorType(ActorType.InternalUser)</strong>
                                </td>

                                <td class="govuk-table__cell" style="width: @(12 + offset)%">
                                    <div class="sub-status-vertical-container">
                                        @foreach (var subStatus in assignedFellingLicenceApplicationModel.SubStatuses)
                                        {
                                            <div>
                                                <strong class="govuk-tag govuk-tag--grey">
                                                    @subStatus.GetDisplayName()
                                                </strong>
                                            </div>
                                        }
                                    </div>
                                </td>

                                <td class="govuk-table__cell" style="width: @(10 + offset)%;" data-sort-value="@(assignedFellingLicenceApplicationModel.Reference)">
                                    <a class="govuk-link" asp-action="ApplicationSummary" asp-controller="FellingLicenceApplication" asp-route-id="@assignedFellingLicenceApplicationModel.FellingLicenceApplicationId">
                                        @assignedFellingLicenceApplicationModel.Reference
                                    </a>
                                </td>

                                <td class="govuk-table__cell" style="width: @(14 + offset)%;">

                                    @assignedFellingLicenceApplicationModel.Property
                                </td>

                                <td class="govuk-table__cell" style="width: @(14 + offset)%;" data-sort-value="@(assignedFellingLicenceApplicationModel.SubmittedDate.HasValue ? assignedFellingLicenceApplicationModel.SubmittedDate.Value.ToString("yyyyMMdd") : "")">
                                    @(assignedFellingLicenceApplicationModel.SubmittedDate.HasValue ? assignedFellingLicenceApplicationModel.SubmittedDate.Value.ToString("dd/MM/yyyy") : "")
                                </td>

                                <td class="govuk-table__cell" style="width: @(14 + offset)%;" data-sort-value="@(assignedFellingLicenceApplicationModel.CitizensCharterDate.HasValue ? assignedFellingLicenceApplicationModel.CitizensCharterDate.Value.ToString("yyyyMMdd") : "")">
                                    @(assignedFellingLicenceApplicationModel.CitizensCharterDate.HasValue ? assignedFellingLicenceApplicationModel.CitizensCharterDate.Value.ToString("dd/MM/yyyy") : "")
                                </td>

                                <td class="govuk-table__cell" style="width: @(14 + offset)%;" data-sort-value="@(assignedFellingLicenceApplicationModel.Deadline.HasValue ? assignedFellingLicenceApplicationModel.Deadline.Value.ToString("yyyyMMdd") : "")">
                                    @(assignedFellingLicenceApplicationModel.Deadline.HasValue ? assignedFellingLicenceApplicationModel.Deadline.Value.ToString("dd/MM/yyyy") : "")
                                </td>

                                <td class="govuk-table__cell" style="width: @(20 + offset)%;">

                                    @{
                                        // Display comma separated list of users

                                        if (assignedFellingLicenceApplicationModel.UserFirstLastNames != null)
                                        {
                                            @(string.Join(", ", assignedFellingLicenceApplicationModel.UserFirstLastNames))
                                        }
                                    }
                                </td>

                                <require-user-account-type required-account-type="AccountAdministrator">
                                    @{
                                        if (@assignedFellingLicenceApplicationModel.FellingLicenceStatus is FellingLicenceStatus.Withdrawn)
                                        {
                                            <td class="govuk-table__cell" style="width: 7%;">
                                                <a class="govuk-link" asp-controller="FellingLicenceApplication" asp-action="ReopenWithdrawnApplication" asp-route-id="@assignedFellingLicenceApplicationModel.FellingLicenceApplicationId">
                                                    Re-open
                                                </a>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="govuk-table__cell" style="width: 7%;"></td>
                                        }
                                    }
                                </require-user-account-type>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
                }
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <nav aria-label="Pagination">
                    <ul class="govuk-pagination">
                        @if (Model.FellingLicenceApplicationAssignmentListModel.HasPreviousPage)
                        {
                            <li class="govuk-pagination__item govuk-pagination__item--prev">
                                <a class="govuk-link govuk-pagination__link" href="@getPageUrl(Model.FellingLicenceApplicationAssignmentListModel.PageNumber - 1)" rel="prev">Previous</a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.FellingLicenceApplicationAssignmentListModel.TotalPages; i++)
                        {
                            <li class="govuk-pagination__item @(i == Model.FellingLicenceApplicationAssignmentListModel.PageNumber ? "govuk-pagination__item--current" : "")">
                                <a class="govuk-link govuk-pagination__link" href="@getPageUrl(i)">@i</a>
                            </li>
                        }
                        @if (Model.FellingLicenceApplicationAssignmentListModel.HasNextPage)
                        {
                            <li class="govuk-pagination__item govuk-pagination__item--next">
                                <a class="govuk-link govuk-pagination__link" href="@getPageUrl(Model.FellingLicenceApplicationAssignmentListModel.PageNumber + 1)" rel="next">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</logged-in>


@section Scripts {
    <script src="/js/fla-assignments-list.js"></script>
}

@section Css{
    <link rel="stylesheet" href="~/css/application-list.css" aria-busyasp-append-version="true"/>
}